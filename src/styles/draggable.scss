.resize-handles {
  opacity: 0;
  transition: opacity .2s;
}

.draggable-target {
  > :not(.resize-handles) {
    width: 100%;
    height: 100%;
    border: 0.5px solid #ddd;
    border-radius: 4px;
  }

  transition: outline-color 200ms ease, transform 400ms ease, width 400ms ease, height 400ms ease;
}

.draggable {
  @apply rounded-lg;
  position: absolute;
  transition: outline-color 200ms ease, transform 100ms ease, width 100ms ease, height 100ms ease;

  outline: 2px dashed rgba(127, 127, 127, 0.4);

  [data-layer-item="true"] {
    pointer-events: auto !important;
  }

  &:hover {
    z-index: 1;
    outline: 2px dashed rgba(127, 127, 127, 1);

    .resize-handles {
      opacity: 1;
    }
  }

  &.dragging {
    cursor: move;
    box-shadow: #888 0 5px 36px;
    z-index: 1;
    perspective: 10000px;
    perspective-origin: 50% 50%;

    > * {
      pointer-events: none !important;
    }

    .resize-handles {
      opacity: 1;
    }
  }
}

.r-layout-resizing .draggable {
  transition: none;
}

.resize-handle {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 40;

  &-trigger {
    padding: 4px;
    display: flex;
    align-items: center;
    justify-content: center;

    opacity: 0.3;
    transition: opacity .2s ease;
  }

  &.dragging, &:hover {
    .resize-handle-trigger {
      opacity: 1;
    }
  }

  &.vertical {
    top: 50%;
    transform: translateY(-50%);

    &.start {
      left: -8px;
    }

    &.end {
      right: -8px;
    }

    .resize-handle-trigger {
      cursor: ew-resize;
    }
  }

  &.horizontal {
    left: 50%;
    transform: translateX(-50%);

    &.start {
      top: -8px;
    }

    &.end {
      bottom: -8px;
    }

    .resize-handle-trigger {
      cursor: ns-resize;
    }
  }
}
